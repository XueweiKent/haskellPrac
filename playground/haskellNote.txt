1. list: 
	head [1,2,3,4,5]		1
	tail [1,2,3,4,5]		[2,3,4,5]
	last [1,2,3,4,5]		5
	init [1,2,3,4,5]		[1,2,3,4]

	length [1,2,3,4,5]		5
	null [1,2,3,4,5]		False
	reverse [1,2,3,4,5]		[5,4,3,2,1]
	
	[1,2,3,4,5] !! 2		3
	[1,2,3,4,5] take 2		[1,2]
	[1,2,3,4,5] drop 2		[3,4,5]
	
	maxinum [1,2,3,4,5]		5
	minimum [1,2,3,4,5]		1
	3 `elem` [1,2,3,4,5]	True

	sum [1,2,3,4,5]			15
	product [1,2,3,4,5]		120

2. Duplication
	cycle [1,2,3]		[1,2,3,1,2,3,1,2,3....]
	repeat 5			[5,5,5,5,5,5,5....]
	replicate 3 10		[10,10,10]

3. list comprehension
	[ x*2 | x<-[1..10], x*2 >= 12 ]
	[ if x<10 then "S" else "B" | x<-[7..13], odd x]
	[ (x,y) | x <- [1,3,5], y <- [2,4,6] ]
	length' xs = sum [1 | _<-xs]
	[ [ x | x <- xs, even x ] | xs <- xxs]

4. tuple
	fst, snd		only work on pair